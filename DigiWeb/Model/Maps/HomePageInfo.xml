<?xml version="1.0" encoding="utf-8" ?>
<!--V1.0.17.0309-->
<sqlMap namespace="HomePageInfo"
        xmlns="http://ibatis.apache.org/mapping"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <alias>
    <typeAlias alias="HomePageInfo" type="Model.Domain.HomePageInfo, Model" />
  </alias>

  <resultMaps>
    <resultMap id="HomePageInfoResult" class="HomePageInfo">
      <result property="Id" column="Hpi_Id" />
      <result property="Welcome" column="Hpi_Welcome" nullValue="" />
      <result property="List1Name" column="Hpi_List1Name" nullValue="" />
      <result property="List2Name" column="Hpi_List2Name" nullValue="" />
      <result property="List3Name" column="Hpi_List3Name" nullValue="" />
      <result property="List4Name" column="Hpi_List4Name" nullValue="" />
      <result property="Email" column="Hpi_Email" nullValue="" />
      <result property="Address" column="Hpi_Address" nullValue="" />
      <result property="Phone1" column="Hpi_Phone1" nullValue="" />
      <result property="Phone2" column="Hpi_Phone2" nullValue="" />
      <result property="CopyrightInfo" column="Hpi_CopyrightInfo" nullValue="" />
    </resultMap>
  </resultMaps>

  <statements>
    <insert id="Insert" parameterClass="HomePageInfo">
      INSERT INTO BM_HomePageInfo (Hpi_Id, Hpi_Welcome, Hpi_List1Name, Hpi_List2Name, Hpi_List3Name, Hpi_List4Name, Hpi_Email, Hpi_Address, Hpi_Phone1, Hpi_Phone2, Hpi_CopyrightInfo, Hpi_RecordTime)
      VALUES (#Id#, #Welcome#, #List1Name#, #List2Name#, #List3Name#, #List4Name#, #Email#, #Address#, #Phone1#, #Phone2#, #CopyrightInfo#, GETDATE())
      <selectKey resultClass="long" type="post" property="Id">
        SELECT Hpi_Id FROM BM_HomePageInfo WHERE Hpi_Id = #Id#
      </selectKey>
    </insert>
    <update id="Update" parameterClass="HomePageInfo">
      UPDATE BM_HomePageInfo SET Hpi_Welcome = #Welcome#, Hpi_List1Name = #List1Name#, Hpi_List2Name = #List2Name#, Hpi_List3Name = #List3Name#, Hpi_List4Name = #List4Name#, Hpi_Email = #Email#, Hpi_Address = #Address#, Hpi_Phone1 = #Phone1#, Hpi_Phone2 = #Phone2#, Hpi_CopyrightInfo = #CopyrightInfo#, Hpi_UpdateTime = GETDATE()
      WHERE Hpi_Id = #Id#
    </update>
    <delete id="Delete" parameterClass="hashtable">
      DELETE FROM BM_HomePageInfo
      <include refid="SqlWhere" />
    </delete>
    <statement id="Truncate">
      TRUNCATE TABLE BM_HomePageInfo
    </statement>

    <sql id="SqlFrom">
      FROM BM_HomePageInfo
      <include refid="SqlJoin" />
    </sql>
    <sql id="SqlWhereBase">
      <isNotNull prepend="AND" property="Id">
        Hpi_Id = #Id#
      </isNotNull>
      <isNotNull prepend="AND" property="Ids">
        <iterate open="(" close=")" conjunction="OR" property="Ids">
          Hpi_Id = $Ids[]$
        </iterate>
      </isNotNull>
    </sql>
    <sql id="SqlWhere">
      <dynamic prepend="WHERE">
        <include refid="SqlWhereBase" />
        <include refid="SqlWhereCustom" />
      </dynamic>
    </sql>
    <sql id="SqlOrderBy">
      ORDER BY
      <isNotNull property="OrderBy">
        $OrderBy$,
      </isNotNull>
      <include refid="SqlOrderByCustom" />
      Hpi_Id DESC
    </sql>
    <select id="SelectCount" parameterClass="hashtable" resultClass="int">
      SELECT COUNT(*)
      <include refid="SqlFrom" />
      <include refid="SqlWhere" />
    </select>
    <select id="Select" parameterClass="hashtable" resultMap="HomePageInfoResult">
      SELECT *
      <include refid="SqlFrom"/>
      <include refid="SqlWhere"/>
      <include refid="SqlOrderBy"/>
    </select>
    <select id="SelectTop" parameterClass="hashtable" resultMap="HomePageInfoResult">
      SELECT TOP $TopCount$ *
      <include refid="SqlFrom"/>
      <include refid="SqlWhere"/>
      <include refid="SqlOrderBy"/>
    </select>
    <select id="SelectByPage" parameterClass="hashtable" resultMap="HomePageInfoResult">
      SELECT TOP $PageSize$ *
      <include refid="SqlFrom" />
      WHERE Hpi_Id NOT IN
      (SELECT TOP $NotInSize$ Hpi_Id
      <include refid="SqlFrom" />
      <include refid="SqlWhere" />
      <include refid="SqlOrderBy" />
      )
      <include refid="SqlWhereBase" />
      <include refid="SqlWhereCustom" />
      <include refid="SqlOrderBy" />
    </select>

    <!--Custom Sql Begin-->
    <sql id="SqlJoin">
    </sql>
    <sql id="SqlOrderByCustom">
    </sql>
    <sql id="SqlWhereCustom">
    </sql>
    <!--Custom Sql End-->

  </statements>

</sqlMap>